// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid()) @db.Uuid
  username     String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  budget       Budget?
  categories   Category[]
  stores       Store[]
}

model Budget {
  id        String   @id @default(uuid()) @db.Uuid
  amount    Int
  start     DateTime
  end       DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.Uuid
}

enum TransactionType {
  INCOME
  EXPENSE
}

model Transaction {
  id         String          @id @default(uuid()) @db.Uuid
  type       TransactionType @default(EXPENSE)
  amount     Int
  date       DateTime        @default(now())
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  user       User            @relation(fields: [userId], references: [id])
  userId     String          @db.Uuid
  category   Category        @relation(fields: [categoryId], references: [id])
  categoryId String          @db.Uuid
  store      Store           @relation(fields: [storeId], references: [id])
  storeId    String          @db.Uuid
}

model Category {
  id           String        @id @default(uuid()) @db.Uuid
  name         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  user         User          @relation(fields: [userId], references: [id])
  userId       String        @db.Uuid

  @@unique([name, userId])
}

model Store {
  id           String        @id @default(uuid()) @db.Uuid
  name         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  user         User          @relation(fields: [userId], references: [id])
  userId       String        @db.Uuid

  @@unique([name, userId])
}
